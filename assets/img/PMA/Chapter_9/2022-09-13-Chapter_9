---
layout: post
title: PMA - 
subtitle: Chapter 9 - Labs Walkthrough
#cover-img: /assets/img/path.jpg
readtime: true
#thumbnail-img: /assets/img/thumb.png
#share-img: /assets/img/path.jpg
tags: [books, PracticalMalwareAnalysis, debugger, ollydbg, idapro]
---

# Lab 9-1
## Full Analysis after the questions sections.

Analyze the malware found in the file Lab09-01.exe using OllyDbg and IDA
Pro to answer the following questions. This malware was initially analyzed in
the Chapter 3 labs using basic static and dynamic analysis techniques.

Questions

1. How can you get this malware to install itself?



2. What are the command-line options for this program? What is the password requirement?



3. How can you use OllyDbg to permanently patch this malware, so that it doesnâ€™t require the special command-line password?



4. What are the host-based indicators of this malware?




5. What are the different actions this malware can be instructed to take via the network?




6. Are there any useful network-based signatures for this malware?



# Full Analysis

As seen in Figure 1.1, our main function starts by comparing the argc with 1. So, if there is one argument specified for this malware upon running, the jump to _loc_402B1D_ will be taken.

![Figure 1.1](/assets/img/PMA/Chapter_9/Lab9-1/Figure1.1)
<p align="center"> Figure 1.1 </p> 

For now, let's follow the left side, the one where the jump is not taken.  
In Figure 2.1, we can see that there is a call to _sub_401000_ made.

![Figure 2.1](/assets/img/PMA/Chapter_9/Lab9-1/Figure2.1)
<p align="center"> Figure 2.1 </p> 

Let's look into that in Figure 2.2.

![Figure 2.2](/assets/img/PMA/Chapter_9/Lab9-1/Figure2.2)
<p align="center"> Figure 2.2 </p> 

In here, the malware checks for a registry key, _SOFTWARE\\Microsoft\\XPS_.
